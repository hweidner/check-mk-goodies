#!/usr/bin/perl

# (c) Harald Weidner, 2019-02-15
# License: MIT
#
# Check_MK local check
# displays some CPU informations in the monitoring console, gahered by
# lscpu
#
# example output:
# 0 CPU_Info - AMD Ryzen 7 1700 Eight-Core Processor, 16 CPUs (1/8/2), 1550-3000 MHz, Caches: L1d:32K L1i:64K L2:512K L3:8192K
# (multiline output stripped)

use strict;
use warnings;

my %c = ();
my $lscpu = "";

open(IN, "LANG='' lscpu |") || exit 0;
while(<IN>) {
  chomp;
  $lscpu .= "$_\\n";
  my ($key, $val) = split /:\s+/;
  $c{$key} = $val;
}
close(IN);

my $topo = "";
if(defined $c{'Socket(s)'} && defined $c{'Core(s) per socket'} && defined $c{'Thread(s) per core'}) {
  $topo = " ($c{'Socket(s)'}/$c{'Core(s) per socket'}/$c{'Thread(s) per core'})";
}

my $cache="";
for my $k (sort keys %c) {
  $cache .= "$1:$c{$k} " if($k =~ /^(L\d\w?) cache$/);
}
$cache = ", Caches: $cache" unless($cache eq "");

my $mhz = "";
if(defined $c{'CPU min MHz'} && defined $c{'CPU max MHz'}) {
  my $mhz_min = int($c{'CPU min MHz'});
  my $mhz_max = int($c{'CPU max MHz'});
  $mhz = ", $mhz_min-$mhz_max MHz";
}

print "0 CPU_Info - $c{'Model name'}, $c{'CPU(s)'} CPUs$topo$mhz$cache\\n$lscpu\n";

