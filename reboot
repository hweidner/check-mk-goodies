#!/bin/bash

# (c) Harald Weidner, 2021-11-03
# License: MIT
#
# Checkmk local check
# Checks wether a system reboot is needed, e.g. after a kernel update.
# Currently, Alpine Linux, Debian/Ubuntu and Red Hat and their derivates are supported.
# On Alpine, the script only checks for an updated kernel version, and only if it runs
# with an own kernel, not in a container.
#
# example output:
# 
# 0 "Reboot needed" - No system reboot needed

CHECK='"Reboot needed"'
SEVERITY=2  # 1=WARN, 2=CRIT

[[ -f /etc/os-release ]] && source /etc/os-release

# Red Hat family
if type /usr/bin/needs-restarting >/dev/null 2>&1; then
  set -o pipefail
  reboot=$(/usr/bin/needs-restarting -r | tr '\n' ' ')
  ret=$?

  if [[ -z $reboot ]]; then
    reboot="(empty output of needs-restarting -r)"
  fi

  if [[ $ret -ne 0 ]]; then
    echo "$SEVERITY $CHECK - $reboot"
  else
    echo "0 $CHECK - $reboot"
  fi

# Debian / Ubuntu family
elif [[ $ID == "debian" || $ID_LIKE == "debian" || $ID == "ubuntu" || $ID_LIKE == "ubuntu" ]]; then
  if [[ -f /var/run/reboot-required ]]; then
    if [[ -f /var/run/reboot-required.pkgs ]]; then
      pkgs=$(cat /var/run/reboot-required.pkgs | tr '\n' ' ')
      echo "$SEVERITY $CHECK - A system reboot is needed due to updated packages: $pkgs"
    else
      echo "$SEVERITY $CHECK - A system reboot is needed"
    fi
  else
    echo "0 $CHECK - No system reboot needed"
  fi

# Alpine Linux
elif [[ $ID == "alpine" || $ID_LIKE == "alpine" ]]; then
  if [[ -d /boot ]]; then
    running=$(uname -r)
    installed=$(ls /boot/config-* | tail -1 | cut -d- -f2-)
    if [[ $running == $installed ]]; then
      echo "0 $CHECK - Running with the latest installed kernel $running. No reboot needed."
    else
      echo "$SEVERITY $CHECK - Running kernel $running, installed kernel $installed. Reboot is needed."
    fi
  fi
fi

exit 0
